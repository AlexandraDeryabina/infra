version: "3.1"

services:
#    redis:
#      image: redis:alpine
#      container_name: lanit-hackaton-redis

    mariadb:
      image: mariadb:10.4
      container_name: lanit-hackaton-mariadb
      working_dir: /application
      volumes:
        - ./data/mysql:/application
      environment:
        - MYSQL_ROOT_PASSWORD=R3zfncwXkDysB82u
        - MYSQL_DATABASE=hackaton
        - MYSQL_USER=hacker
        - MYSQL_PASSWORD=PG9DJRu7B2nQgEt2
      ports:
        - "9093:3306"

    webserver:
      image: nginx:alpine
      container_name: lanit-hackaton-webserver
      working_dir: /application
      volumes:
          - ./../backend:/application
          - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      ports:
       - "8080:80"

    php:
      build: docker/php-fpm
      container_name: lanit-hackaton-php-fpm
      working_dir: /application
      volumes:
        - ./../backend:/application
        - ./docker/php-fpm/php-ini-overrides.ini:/etc/php/7.3/fpm/conf.d/99-overrides.ini
        - ./docker/php-fpm/xdebug.ini:/etc/php/7.3/fpm/conf.d/xdebug-overrides.ini
      ports:
        - "9000:9000"

    nginx:
      image: nginx:latest
      container_name: lanit-hackaton-nginx
      working_dir: /application
      volumes:
        - ./docker/nginx/dev.nginx.conf:/etc/nginx/site_enabled/default
        - ./../backend:/application
        - ./docker/nginx/dev.nginx.conf:/etc/nginx/conf.d/default.conf
      ports:
        - "1083:80"

    node:
      build: docker/node
      container_name: lanit-hackaton-node
      working_dir: /app
      volumes:
        - ./../front:/app
      ports:
          - "1081:1081"
      tty: true
      command: bash -c "npm install && npm run build && npm run start && npm run generate"


    node_admin:
        build: docker/node
        container_name: lanit-hackaton-node-admin
        working_dir: /app
        volumes:
            - ./../front-admin:/app
        ports:
            - "1089:1082"
        tty: true
        command: bash -c "npm install && npm run build && npm run start && npm run generate"


    composer:
      image: composer
      volumes:
        - './../backend:/app'
      command: install
      depends_on:
        - php
